<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GHOST.sk_ghost.dao.V1Dao">

    <!-- 사용자 조회 -->
    <select id="userList" resultType="map">
        SELECT id,name,process from member
    </select>
    <!-- 운영자 스케줄 조회 -->
    <select id="adminShiftListAll" resultType="map">
        SELECT name,date,shift,priority from admin_shift
    </select>

    <!-- 금일 담당 운영 대응자 조회 -->
    <select id="shiftAdminList" resultType="map" parameterType="GHOST.sk_ghost.dto.OP.AdminShiftParam">
        SELECT mem.id, admin.name, CAST(admin.date as CHAR) as date, admin.shift, mem.uuid, admin.priority, mem.process
        FROM member mem
        LEFT JOIN admin_shift admin
        ON mem.name = admin.name
        WHERE admin.priority = 1
        AND (DATE_FORMAT(#{date}, "%Y-%m-%d") = DATE_FORMAT(admin.date, "%Y-%m-%d"))
        AND admin.shift = #{shift}
    </select>




    <!-- 해당 날짜의 운영자 스케줄 조희 -->
    <select id="oneDateSchedule" resultType="map">
        SELECT A.name, CAST(A.date as CHAR) as date, A.shift, A.priority, B.process, COALESCE(C.creator, '-') as creator, COALESCE(C.modificator, '-') as modificator
        FROM admin_shift A
        LEFT JOIN member B ON A.name = B.name
        LEFT JOIN schedule_history C ON A.date = C.date
        WHERE A.date = #{dateInfo}

    </select>

    <!-- 입력된 운영자 스케줄 저장 -->
    <insert id="saveSchedule" parameterType="java.util.List">
        insert into admin_shift (name,date,shift,priority)
        values
        <foreach collection="list" item="listItem" separator=",">
            (
            #{listItem.name},
            #{listItem.date},
            #{listItem.shift},
            #{listItem.priority}
            )
        </foreach>
    </insert>

    <!-- shift_admin 조회 -->
    <select id="adminShiftLastDate" resultType="String">
        SELECT date from admin_shift
    </select>

    <!-- 선택된 운영자 스케줄 삭제 -->
    <delete id="deleteSchedule" parameterType="java.util.List">
        delete from admin_shift
        where
        <foreach collection="list" item="listItem" separator="OR">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                name = #{listItem.name, jdbcType=VARCHAR}
            </trim>
            <trim prefix="AND" prefixOverrides="OR">
                date = #{listItem.date, jdbcType=DATE}
            </trim>
            <trim prefix="AND" prefixOverrides="OR">
                shift = #{listItem.shift, jdbcType=VARCHAR}
            </trim>
            <trim prefix="AND" prefixOverrides="OR">
                priority = #{listItem.priority, jdbcType=VARCHAR}
            </trim>
        </foreach>
    </delete>

    <update id="updateSchedule" parameterType="java.util.Map">
        UPDATE admin_shift
        SET
        name = #{toBeName, jdbcType=VARCHAR},
        date = #{date, jdbcType=DATE},
        shift = #{shift, jdbcType=VARCHAR},
        priority = #{priority, jdbcType=VARCHAR}
        WHERE
        name = #{name, jdbcType=VARCHAR}
        AND date = #{date, jdbcType=DATE}
        AND shift = #{shift, jdbcType=VARCHAR}
        AND priority = #{priority, jdbcType=VARCHAR}
    </update>


    <select id="getNameFromId" resultType="java.lang.String">
        SELECT name FROM member WHERE id = #{id}
    </select>


    <select id="isDateHistory" resultType="int">
        SELECT COUNT(*) FROM schedule_history WHERE date = #{date}
    </select>


    <!-- schedule_history 테이블에 생성자 이름을 삽입 -->
    <insert id="insertDateToScheduleHistoryTable" parameterType="String">
        INSERT INTO schedule_history (date, creator, modificator)
        VALUES (#{date, jdbcType=DATE}, #{creator, jdbcType=VARCHAR}, NULL)
    </insert>

    <!-- schedule_history 테이블에 수정자 이름을 삽입 -->
    <update id="updateDateToScheduleHistoryTable">
        UPDATE schedule_history
        SET modificator = #{modificator, jdbcType=VARCHAR}
        WHERE date = #{date, jdbcType=DATE}
    </update>

    <!-- admin_shift 테이블에 date가 들어있는지 검사  -->
    <select id="isDateAdminShiftTable" resultType="boolean">
        SELECT EXISTS (
        SELECT 1
        FROM admin_shift
        WHERE date = #{date, jdbcType=DATE}
        LIMIT 1
        ) AS result
    </select>

    <!-- shedule_admin 테이블에서 해당 날짜를 삭제하는 쿼리 -->
    <delete id="deleteDateToScheduleHistoryTable" parameterType="java.lang.String">
        DELETE FROM schedule_history
        WHERE date = #{date, jdbcType=DATE}
    </delete>





</mapper>

